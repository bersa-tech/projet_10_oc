swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "2.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions/month:
    get:
      tags:
        - Transactions
      summary: Get all transactions for the month
      description: all transactions for the month, showing DATE, DESCRIPTION (type, category, and note), AMOUNT, and BALANCE
      parameters:
        - in: query
          name: month
          description: Choose Month
          required: true
          type: string
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved transactions
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid month format or parameters
        "401":
          description: Unauthorized, invalid token
        "500":
          description: Internal Server Error
  /user/transaction/{transactionId}/edit/category:
    put:
      tags:
        - Transactions
      summary: Edit category of a specific transaction
      description: Update the category of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Payload for updating the transaction's category
          required: true
          schema:
            $ref: "#/definitions/EditTransactionCategory"
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: "#/definitions/EditTransactionCategoryResponse"
        "400":
          description: Invalid input for category
        "401":
          description: Unauthorized, invalid token
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transaction/{transactionId}/edit/note:
    put:
      tags:
        - Transactions
      summary: Edit note of a specific transaction
      description: Add or update the note for a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Payload for updating the transaction's note
          required: true
          schema:
            $ref: "#/definitions/EditTransactionNote"
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note updated successfully
          schema:
            $ref: "#/definitions/EditTransactionNoteResponse"
        "400":
          description: Invalid input for note
        "401":
          description: Unauthorized, invalid token
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transaction:
    post:
      tags:
        - Transactions
      summary: new transaction
      description: Create a new transaction
      parameters:
        - in: body
          name: body
          description: Payload for creating a new transaction
          required: true
          schema:
            $ref: "#/definitions/CreateTransaction"
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        "201":
          description: Transaction created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid input for transaction creation
        "401":
          description: Unauthorized, invalid token
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionsResponse:
    type: object
    description: Response with a list of transactions for the month
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            date:
              type: string
              description: Date of the transaction
              example: "2024-12-15T14:30:00"
            description:
              type: object
              description: Detailed description of the transaction
              properties:
                type:
                  type: string
                  description: Type of transaction (e.g., "Deposit", "Withdrawal")
                  example: "Deposit"
                category:
                  type: string
                  description: Category of transaction (e.g., "Food", "Transport")
                  example: "Food"
                note:
                  type: string
                  description: Additional notes or comments for the transaction
                  example: "KFC"
            amount:
              type: number
              format: float
              description: Amount of the transaction
              example: 100.00
            balance:
              type: number
              format: float
              description: Balance after the transaction
              example: 1200.00
  EditTransactionCategory:
    type: object
    description: Payload to edit a transaction's category
    properties:
      category:
        type: string
        description: New category for the transaction
        example: "electronics"
  EditTransactionCategoryResponse:
    type: object
    description: Response after editing the transaction's category
    properties:
      status:
        type: integer
      message:
        type: string
      category:
        type: string
        description: Updated category
        example: "FastFood"
  EditTransactionNote:
    type: object
    description: Payload to edit a transaction's note
    properties:
      note:
        type: string
        description: New note for the transaction
        example: "Afternoon with my son"
  EditTransactionNoteResponse:
    type: object
    description: Response after editing the transaction's note
    properties:
      status:
        type: integer
      message:
        type: string
      note:
        type: string
        description: Updated note
        example: "Afternoon with my son"
  CreateTransaction:
    type: object
    description: Payload for creating a new transaction
    properties:
      type:
        type: string
        description: Type of the transaction (e.g., "Deposit", "Withdrawal")
        example: "Deposit"
      category:
        type: string
        description: Category of the transaction (e.g., "Food", "Transport")
        example: "Food"
      amount:
        type: number
        format: float
        description: Amount of the transaction
        example: 200.00
      note:
        type: string
        description: Note for the transaction
        example: "cheatmeal day"
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: ID of the transaction
      type:
        type: string
        description: Type of the transaction (e.g., "Deposit", "Withdrawal")
      category:
        type: string
        description: Category of the transaction (e.g., "Food", "Transport")
      amount:
        type: number
        format: float
        description: Amount of the transaction
      note:
        type: string
        description: Note for the transaction
